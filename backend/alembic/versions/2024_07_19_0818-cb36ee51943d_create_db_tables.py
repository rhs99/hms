"""create db tables

Revision ID: cb36ee51943d
Revises: 
Create Date: 2024-07-19 08:18:40.942085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cb36ee51943d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('hospitals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_at', sa.String(length=10), nullable=False),
    sa.Column('end_at', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', name='genderenum'), nullable=False),
    sa.Column('blood_group', sa.Enum('A_POS', 'A_NEG', 'B_POS', 'B_NEG', 'O_POS', 'O_NEG', 'AB_POS', 'AB_NEG', name='bloodgroupenum'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('hospital_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctors',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dept_id', sa.Integer(), nullable=True),
    sa.Column('registration_no', sa.Integer(), nullable=False),
    sa.Column('degree', sa.String(length=300), nullable=True),
    sa.Column('experience', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('registration_no')
    )
    op.create_table('userroles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('branchdepts',
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('dept_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('branch_id', 'dept_id')
    )
    op.create_table('workplaces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('slotschedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.Column('work_place_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Enum('SAT', 'SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', name='weekdayenum'), nullable=False),
    sa.ForeignKeyConstraint(['slot_id'], ['slots.id'], ),
    sa.ForeignKeyConstraint(['work_place_id'], ['workplaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('slot_schedule_id', sa.Integer(), nullable=False),
    sa.Column('parent', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['slot_schedule_id'], ['slotschedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointments')
    op.drop_table('slotschedules')
    op.drop_table('workplaces')
    op.drop_table('branchdepts')
    op.drop_table('userroles')
    op.drop_table('doctors')
    op.drop_table('branches')
    op.drop_table('users')
    op.drop_table('tests')
    op.drop_table('slots')
    op.drop_table('roles')
    op.drop_table('hospitals')
    op.drop_table('departments')
    # ### end Alembic commands ###
